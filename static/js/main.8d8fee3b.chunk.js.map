{"version":3,"sources":["Story.js","PagePrincipale.js","Login.js","Navigation.js","App.tsx","serviceWorker.js","index.js"],"names":["images","smallImages","Story","props","state","photoIndex","isOpen","this","className","md","src","alt","onClick","setState","mainSrc","nextSrc","length","prevSrc","imageTitle","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Component","PagePrincipale","class","Login","login","Logged","Accueil","type","placeholder","Navigation","href","aria-label","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d8fee3b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport Lightbox from \"react-image-lightbox\";\r\n\r\nconst images = [\r\n  'https://assets.puzzlefactory.pl/puzzle/247/857/original.jpg',\r\n  'https://lh3.googleusercontent.com/proxy/frD8P7Ks6Ct3KCYLuWdMkpDCYTZrtqNb_8mRM4gmBEyruc0PyOzvjn60aY5McSdq9GWLYRHXmYqxVwhkoEfezJiVNr0U4bEqz8-YS3Jt9cOePZXe_Y_uiOeaUhb2VuT_D07X6osIwIYnpnOMp4RBe5l-5XpsJ7J3oeI-',\r\n  'https://idinterdesign.ca/wp-content/uploads/2016/07/paysage-ID-02-750x468.jpg',\r\n  'https://www.paysagesconseil.fr/wp-content/uploads/2019/06/Agence-paysagiste-st-lo-hervieu-paysages-bassin-naturel.jpg',\r\n  'https://static.nationalgeographic.fr/files/styles/image_3200/public/iceland-Seljalandsfoss-waterfall.adapt_.1190.1.jpg?w=1190&h=924',\r\n  'https://www.empara.fr/medias/photo-paysage-urbain-pont-nuit.jpg',\r\n  'https://i.ytimg.com/vi/xgd-VJ9nHQg/maxresdefault.jpg',\r\n  'https://assets.puzzlefactory.pl/puzzle/217/482/original.jpg',\r\n  'https://assets.puzzlefactory.pl/puzzle/247/858/original.jpg'\r\n];\r\n\r\nconst smallImages = [\r\n  \"https://assets.puzzlefactory.pl/puzzle/247/857/original.jpg\",\r\n  \"https://lh3.googleusercontent.com/proxy/frD8P7Ks6Ct3KCYLuWdMkpDCYTZrtqNb_8mRM4gmBEyruc0PyOzvjn60aY5McSdq9GWLYRHXmYqxVwhkoEfezJiVNr0U4bEqz8-YS3Jt9cOePZXe_Y_uiOeaUhb2VuT_D07X6osIwIYnpnOMp4RBe5l-5XpsJ7J3oeI-\",\r\n  \"https://idinterdesign.ca/wp-content/uploads/2016/07/paysage-ID-02-750x468.jpg\",\r\n  \"https://www.paysagesconseil.fr/wp-content/uploads/2019/06/Agence-paysagiste-st-lo-hervieu-paysages-bassin-naturel.jpg\",\r\n  \"https://static.nationalgeographic.fr/files/styles/image_3200/public/iceland-Seljalandsfoss-waterfall.adapt_.1190.1.jpg?w=1190&h=924\",\r\n  \"https://www.empara.fr/medias/photo-paysage-urbain-pont-nuit.jpg\",\r\n  \"https://i.ytimg.com/vi/xgd-VJ9nHQg/maxresdefault.jpg\",\r\n  \"https://assets.puzzlefactory.pl/puzzle/217/482/original.jpg\",\r\n  'https://assets.puzzlefactory.pl/puzzle/247/858/original.jpg'\r\n];\r\n\r\nclass Story extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        ;\r\n        this.state = {\r\n          photoIndex: 0,\r\n          isOpen: false\r\n        };\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n      const { photoIndex, isOpen } = this.state;\r\n        return (\r\n          <MDBContainer>\r\n          <div className=\"mdb-lightbox no-margin\">\r\n            <MDBRow>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[0]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 0, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[1]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 1, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[2]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 2, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[3]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 3, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[4]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 4, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[5]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 5, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[6]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 6, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[7]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 7, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n              <MDBCol md=\"4\">\r\n                <figure>\r\n                  <img\r\n                    src={smallImages[8]}\r\n                    alt=\"Gallery\"\r\n                    className=\"img-fluid\"\r\n                    onClick={() =>\r\n                      this.setState({ photoIndex: 8, isOpen: true })\r\n                    }\r\n                  />\r\n                </figure>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </div>\r\n          {isOpen && (\r\n            <Lightbox\r\n              mainSrc={images[photoIndex]}\r\n              nextSrc={images[(photoIndex + 1) % images.length]}\r\n              prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n              imageTitle={photoIndex + 1 + \"/\" + images.length}\r\n              onCloseRequest={() => this.setState({ isOpen: false })}\r\n              onMovePrevRequest={() =>\r\n                this.setState({\r\n                  photoIndex: (photoIndex + images.length - 1) % images.length\r\n                })\r\n              }\r\n              onMoveNextRequest={() =>\r\n                this.setState({\r\n                  photoIndex: (photoIndex + 1) % images.length\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </MDBContainer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Story;","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Story from './Story'\r\n\r\nclass PagePrincipale extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div class=\"jumbotron jumbotron-fluid\">\r\n                    <div class=\"container\">\r\n                     <h1 class=\"display-4\">My Page</h1>\r\n                     <p class=\"lead\">My Routine Photos</p>\r\n                    </div>\r\n                    </div>\r\n                 <div className=\"photo-container\">\r\n                     <Story/>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PagePrincipale;","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport PagePrincipale from './PagePrincipale'\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        login: 0\r\n    }\r\n\r\n    Logged=() => {\r\n        this.setState({\r\n            login:1\r\n        })\r\n    }\r\n    \r\n \r\n    \r\n    Accueil=() => {\r\n        if (this.state.login === 0) {\r\n            return (\r\n                \r\n                    <div>\r\n                    <div class=\"sidenav\">\r\n                         <div class=\"login-main-text\">\r\n                          <h2>StoryPage</h2> \r\n                           <br/>\r\n                           <p>Login or register from here to access.</p>\r\n                        </div>\r\n                   </div>\r\n                   <div class=\"main\">\r\n                          <div class=\"col-md-6 col-sm-12\">\r\n                               <div class=\"login-form\">\r\n                                    <form>\r\n                                       <div class=\"form-group\">\r\n                                           <label>User Name</label>\r\n                                           <input type=\"text\" class=\"form-control\" placeholder=\"User Name\"></input>\r\n                                      </div>\r\n                                          <div class=\"form-group\">\r\n                                           <label>Password</label>\r\n                                           <input type=\"password\" class=\"form-control\" placeholder=\"Password\"></input>\r\n                                          </div>\r\n                                      <button type=\"submit\" class=\"btn btn-black\" onClick={this.Logged}>Login</button>\r\n                                      <button type=\"submit\" class=\"btn btn-secondary\">Register</button>\r\n                                    </form>\r\n                              </div>\r\n                         </div>\r\n                    </div>\r\n                  </div>\r\n            )\r\n\r\n        }else{\r\n            if (this.state.login === 1) {\r\n                return (\r\n                  (<PagePrincipale/>))\r\n                }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n            {this.Accueil()}\r\n            </div>\r\n\r\n        \r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login';\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    \n    \n        render() {\n\n        return (\n            <div>\n                <nav class=\"navbar navbar-light bg-light justify-content-between\">\n                    <ul>\n                      <l1 class=\"navbar-brand\">StoryPage</l1>\n                      <l1>\n                      <a href=\"http://localhost:3000/react-deploy\" class=\"btn btn-info btn-lg\" >\n                         <span class=\"glyphicon glyphicon-log-out\"></span> Log out\n                          </a>\n                     </l1> \n                    </ul>\n                     <form class=\"form-inline\">\n                         <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                        </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navigation;\n","import React, {Component} from 'react';\nimport './index.css';\nimport Navigation from './Navigation';\nimport Login from './Login';\n\nclass App extends React.Component<{},any> {\n\n    constructor(props: number) {\n        super(props);\n    \n    }\n\n\n    render () {\n\n\n        return(\n       \n           \n        <div >\n            \n            <Navigation/>  \n            <Login/>         \n        </div>\n\n        \n        );\n}\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}